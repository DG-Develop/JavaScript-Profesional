{"version":3,"sources":["sw.js"],"names":["VERSION","self","addEventListener","event","waitUntil","precahe","request","method","respondWith","cachedResponse","updateCache","precache","cache","caches","open","addAll","response","match","fetch","put"],"mappings":"AAAA,MAAMA,OAAO,GAAG,CAAhB;AAEAC,IAAI,CAACC,gBAAL,CAAsB,SAAtB,EAAiCC,KAAK,IAAI;AACtCA,EAAAA,KAAK,CAACC,SAAN,CAAgBC,OAAO,EAAvB;AACH,CAFD;AAIAJ,IAAI,CAACC,gBAAL,CAAsB,OAAtB,EAA+BC,KAAK,IAAI;AACpC,QAAMG,OAAO,GAAGH,KAAK,CAACG,OAAtB,CADoC,CAGpC;;AACA,MAAGA,OAAO,CAACC,MAAR,KAAmB,KAAtB,EAA4B;AACxB;AACH,GANmC,CAQpC;;;AACAJ,EAAAA,KAAK,CAACK,WAAN,CAAkBC,cAAc,CAACH,OAAD,CAAhC,EAToC,CAWpC;;AACAH,EAAAA,KAAK,CAACC,SAAN,CAAgBM,WAAW,CAACJ,OAAD,CAA3B;AACH,CAbD;;AAeA,eAAeK,QAAf,GAAyB;AACrB,QAAMC,KAAK,GAAG,MAAMC,MAAM,CAACC,IAAP,CAAYd,OAAZ,CAApB;AACA,SAAOY,KAAK,CAACG,MAAN,CAAa;AACnB;;;;;;;;AADmB,GAAb,CAAP;AAUH;;AAED,eAAeN,cAAf,CAA8BH,OAA9B,EAAsC;AAClC,QAAMM,KAAK,GAAG,MAAMC,MAAM,CAACC,IAAP,CAAYd,OAAZ,CAApB;AACA,QAAMgB,QAAQ,GAAG,MAAMJ,KAAK,CAACK,KAAN,CAAYX,OAAZ,CAAvB;AACA,SAAOU,QAAQ,IAAIE,KAAK,CAACZ,OAAD,CAAxB;AACH;;AAED,eAAeI,WAAf,CAA2BJ,OAA3B,EAAmC;AAC/B,QAAMM,KAAK,GAAG,MAAMC,MAAM,CAACC,IAAP,CAAYd,OAAZ,CAApB;AACA,QAAMgB,QAAQ,GAAG,MAAME,KAAK,CAACZ,OAAD,CAA5B;AACA,SAAOM,KAAK,CAACO,GAAN,CAAUb,OAAV,EAAmBU,QAAnB,CAAP;AACH","file":"sw.js","sourceRoot":"..","sourcesContent":["const VERSION = 1\n\nself.addEventListener('install', event => {\n    event.waitUntil(precahe())\n})\n\nself.addEventListener('fetch', event => {\n    const request = event.request\n\n    //get\n    if(request.method !== 'GET'){\n        return \n    }\n\n    //buscar el cache\n    event.respondWith(cachedResponse(request))\n\n    //actualizar el cache\n    event.waitUntil(updateCache(request))\n})\n\nasync function precache(){\n    const cache = await caches.open(VERSION)\n    return cache.addAll([\n     /*    '/',\n        '/index.html',\n        '/assets/index.js',\n        '/assets/MediaPlayer.js',\n        '/assets/plugins/AutoPlay.js',\n        '/assets/plugins/AutoPause.js',\n        '/assets/index.css',\n        '/assets/BigBuckBunny.mp4', */\n    ])\n}\n\nasync function cachedResponse(request){\n    const cache = await caches.open(VERSION)\n    const response = await cache.match(request)\n    return response || fetch(request)\n}\n\nasync function updateCache(request){\n    const cache = await caches.open(VERSION)\n    const response = await fetch(request)\n    return cache.put(request, response)\n}"]}