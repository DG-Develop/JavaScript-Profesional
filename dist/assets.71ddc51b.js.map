{"version":3,"sources":["assets/MediaPlayer.ts","assets/plugins/Autoplay.ts","assets/plugins/AutoPause.ts","assets/index.ts"],"names":[],"mappings":";;;;;;AAAA,AEEA,ADAA,IDFA,AEEA,ADAA,QAAA,CCAA,EFFA;AAAA,AEEA,ADAA;ADFA,AEEA,ADAA,YDFA,AEEA,ADAA;ADEE,AEEE,ADFA,WDAF,AEEE,ADFA,QAAA,CCEA,EFFF,ACAE,CDAU,AEEV,ADDC,MDDH,EAAoB,OAApB,EAAgC;AAAZ,AEGd,QFHc,CEGT,MFHS,GEGd,EFHc,CEGG,IFHH,AEGd,CFHc,EAAA;AAAA,AEId,ADDJ,EAAA,IDHkB,GEIT,CDDT,CAAA,EDHkB,GAAA,EAAA,ECGlB,CAAA,GAAA,GCCI,ADDJ,GCC8B,KAAK,EDD/B,MAAJ,EAAuB,QCCO,CAAwB,IAAxB,CAA6B,IAA7B,CAA1B;AFJ0B,AGJlC,ADSQ,ADDA,IERR,IFQY,CCCC,ADDA,MAAM,CAAC,CERpB,GAAA,CFQa,CAAa,KAAlB,EAAyB,ECCzB,GAA8B,CCTtC,CAAA,GDS2C,ICT3C,CAAA,eAAA,CAAA,CAAA,ADSsC,CAA4B,IAA5B,CAAiC,IAAjC,CAA9B;AACH,ADDO,MAAA,MAAM,CAAC,KAAP,CAAa,KAAb,GAAqB,IAArB;ADJR,AGJJ,AFSS,IETT,KHIS,KAAL,AGJJ,GHIiB,AGJjB,MHIuB,CAAC,EAApB,MGJJ,CAAA,OAAA,CAAA,oBAAA,CAAA,CAAA;AHKI,AEMA,EAAA,OFNK,EEML,CAAA,IFNA,GAAe,EEMf,CAAA,GFNqB,AEMrB,CFNsB,EEMtB,KFNA,KEMI,MAAJ,EAAU;AFJV,AGNJ,ADWQ,ADDA,IEVR,AFUQ,KDJC,AEKI,CDDC,CAAC,IEVf,ADWQ,ADDA,GEVR,ADWsB,EFLlB,IEKI,SCXR,CAAA,OAAA,CAAA,qBAAA,CAAA,CAAA,EAEA;AHKG,AEKK,ADDH,GAND,KCOU,QAAQ,GAAG,IAAI,oBAAJ,CAAyB,KAAK,kBAA9B,EAAkD;AAC/D,MAAA,SAAS,EAAE,KAAK;AFJlB,AGNV,ADS2E,ADA3E,EDHU,EGNJ,CDSmB,CAAjB,GCTG,AFSX,GETc,CHMJ,CAAA,GCGV,GETsB,CAAC,EHMb,CAAA,UGNI,CHMJ,AGN2B,GHMnC,IGNY,CAAd,OHME;AAAA,AGLF,ADWQ,ADfR,CAAA,EAAA,CEIM,ADWE,IFNN,EGLU,EDWI,CFNd,AGLa,ADWE,GFNf,CGLiB,GHKjB,AEMM,CAAiB,KAAK,ICXX,CAAA,CDWM,CAAY,KCXtB,ADWP,CCXuB;AAC7B,ADYM,ECZN,EAAE,ADYI,ECZF,KADyB,CDaf,CAAC,gBAAT,CAA0B,kBAA1B,EAA8C,KAAK,sBAAnD;AFPJ,AGJF,ADYG,ADHL,EETE,CDIE,IDKJ,CAAA,CDLS,AGJA,EAAE,CAAC,GFSZ,CDLI,AGJY,CHIC,CCKF,MDLX,CAAqB,CGJT,AFShB,CETgB,OAAJ,CHIa,CGJd,EAAiB,GHIH,CGJO,CHID,UGJC,CAAA,OAAJ,EAAjB;AHKL,AGPyB,CAAhB,CAAf,IHOM,MAAM,CAAC,GAAP,CAAW,KAAX;AACD,AGHL,ADWY,EAAA,ECXN,CHCF,GGDM,GAAgB,ADWd,CAAA,OCXsB,CAAC,CDWvB,CAAA,YCXc,CAAwB,KDWtC,CCXc,CAA1B,CDWI,UAA2B,OAA3B,EAA+D;AFPhE,AEQK,GFZE,KEYI,KAAK,GAAG,OAAO,CAAC,CAAD,CAArB;ACXR,ADaQ,ICbJ,CAAC,GDaS,ICbd,GAAe,EDaQ,GAAG,KAAK,CAAC,CCbjB,gBDaW,IAA2B,KAAK,SAAlD;AFTN,AGJmB,EHInB,OGJmB,IHInB,CAAA,CGJyB,CAAC,OHI1B,CAAA,EGJmB,EHInB,AGJmB,GHInB,YAAA;AACE,AGLoC,ADehC,CCfR,ODeW,CFVF,KAAL,CAAW,EEUP,EAAa,CFVjB,GAAmB,IAAnB;AACD,AEUS,GFZV,QEYe,MAAL,CAAY,IAAZ;ACdZ,ADeS,ICfH,CDaE,KCbI,CDeC,ECfe,QAAQ,CAAC,cAAT,CAAwB,QAAxB,CAA5B;AHKE,AEWU,EFXV,SEWe,EFXf,CAAA,GEWU,CAAY,KFXtB,AEWU,CFXV,MAAA,GAAA,YAAA;AACE,AGLJ,ADgBS,MChBH,CAAC,EHKE,KAAL,AGLJ,CHKe,EGLE,GHKb,GAAmB,KAAnB,CGLa;AHMd,AGLA,ADiBE,ECjBF,CHGD,AEGU,KCNH,CAAC,KAAP,CAAa,KAAd,GACI,MAAM,CAAC,MAAP,EADJ,GAEI,MAAM,CAAC,IAAP,EAFJ;AAGD,CAJD;AHOE,AEaU,EFbV,AEaU,SAAA,CAAA,CFbV,CAAA,OEaU,CAAA,CFbV,CAAA,IAAA,GAAA,YAAA,CEaU,GAAR,YAAA;AFZA,AGDJ,ADcQ,ICdJ,IDcU,CFbL,KAAL,CAAW,EEaQ,EFbnB,CEasB,GCdH,KDcW,CAAC,GCdnC,EAAkC,UDcR,KAA6B,SAA/C;AFZL,AGDD,EAAA,CHDA,QGCS,CAAC,aAAV,CAAwB,QAAxB,CAAiC,sCAAjC,EAA2C,KAA3C,CAAiD,UAAA,KAAA,EAAK;AACpD,ADaI,ICbJ,IDaQ,GCbD,CAAC,GAAR,CAAY,CDaR,EAAc,ECbD,CAAC,OAAlB;AHCF,AGAC,ADaS,EFbV,CGFA,QDee,EFbf,CAAA,GEaU,CAAY,IAAZ,CFbV,CAAA,KAAA,GAAA,YAAA;AACE,AGAH,ADaQ,KAFD,IFXC,EEaI,GFbT,CAAW,KAAX;AACD,AEaS,GFfV,QEee,MAAL,CAAY,KAAZ;AACH;AFbP,AEcG,EFdH,CEOU,UFPV,CAAA,SAAA,CAAA,UAAA,GAAA,YAAA;AACE;AACA,AEaJ,QFbQ,CEaR,IFba,KAAL,AEaR,CFbmB,MAAf,EAAuB;AACrB,AE7BN,CAAA,EAAA,QF6BW,IAAL;AACD,KAFD,MAGK;AACH,AEWN,OAAA,CAAA,GFXW,IEWX,CFXM,EEWS,SAAf;AFVK;AACF,GARD;;AASF,SAAA,WAAA;AArCA,CAAA,EAAA;;AA6CA,OAAA,CAAA,OAAA,GAAe,WAAf","file":"assets.71ddc51b.js","sourceRoot":"..","sourcesContent":["class MediaPlayer {\n  media: HTMLMediaElement\n  plugins: Array<any>\n\n  constructor(config, plugins = []) {\n    this.media = config.el\n    this.plugins = config.plugins\n\n    this.initPlugins()\n  }\n\n  private initPlugins() {\n    this.plugins.forEach(plugin => {\n      plugin.run(this)\n    })\n  }\n  mute() {\n    this.media.muted = true\n  }\n  unmute() {\n    this.media.muted = false\n  }\n  play() {\n    this.media.play()\n  }\n  pause() {\n    this.media.pause()\n  }\n  togglePlay() {\n    //regresa un true  si estÃ¡ pausado y false en caso contrario\n    if (this.media.paused) {\n      this.play()\n    }\n    else {\n      this.pause()\n    }\n  }\n}\n\n\n\n\n\n\n\nexport default MediaPlayer","import MediaPlayer from \"../MediaPlayer\"\n\nclass AutoPlay {\n\n    constructor() {\n    }\n\n    run(player: MediaPlayer) {\n        if (!player.media.muted) {\n            player.media.muted = true\n        }\n\n        player.play()\n    }\n}\n\n\nexport default AutoPlay","import MediaPlayer from '../MediaPlayer'\n\nclass AutoPause {\n    private threshold: number\n    private player: MediaPlayer\n\n    constructor(){\n        this.threshold = 0.25\n        this.handlerItersection = this.handlerItersection.bind(this)\n        this.handleVisibilityChange = this.handleVisibilityChange.bind(this)\n    }\n\n    run(player){\n        this.player = player\n        const observer = new IntersectionObserver(this.handlerItersection, {\n            threshold: this.threshold\n        })\n        observer.observe(this.player.media)\n\n        document.addEventListener(\"visibilitychange\", this.handleVisibilityChange)\n    }\n\n    private handlerItersection(entries: IntersectionObserverEntry[]){\n        const entry = entries[0]\n\n        const isVisible = entry.intersectionRatio >= this.threshold\n\n        if(isVisible){\n            this.player.play()\n        }else{\n            this.player.pause()\n        }\n        \n    }\n\n    private handleVisibilityChange(){\n        const isVisible = document.visibilityState === \"visible\"\n        if (isVisible){\n            this.player.play()\n        }else{\n            this.player.pause()\n        }\n    }\n}\n\nexport default AutoPause","import MediaPlayer from './MediaPlayer'\nimport AutoPlay from './plugins/Autoplay'\nimport AutoPause from './plugins/AutoPause'\n\n// query selector agarra un tag o varios en este caso solo uno para video y otro para el boton\nconst video = document.querySelector('video')\nconst player = new MediaPlayer({\n  el: video, \n  plugins: [new AutoPlay(), new AutoPause()]\n})\n\nconst play: HTMLElement = document.getElementById('play')\nplay.onclick = () => player.togglePlay()\n\nconst unmute: HTMLElement = document.getElementById('unmute')\nunmute.onclick = () => {\n  (player.media.muted)\n    ? player.unmute()\n    : player.mute()\n}\n\n\nif ('serviceWorker' in navigator) {\n  navigator.serviceWorker.register('/sw.js').catch(error => {\n    console.log(error.message)\n  })\n}"]}